service: ServerlessActions

provider:
  name: aws
  runtime: nodejs8.10

  stage: dev
  region: ap-southeast-1
  memorySize: 512
  timeout: 10

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
            - "/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:ap-southeast-1:009988127316:table/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:ap-southeast-1:009988127316:table/CustomerTable"

functions:
  CreateCustomer:
    handler: handler.onCreateCustomer
    events:
      - http:
          path: create/customer
          method: post
          cors: true
          integration: lambda
          response:
            headers:
              Content-Type: "'application/json'"
              Cache-Control: "'max-age=0'"
  CreateOrder:
    handler: handler.onCreateOrder
    events:
      - http:
          path: create/order
          method: post
          cors: true
          integration: lambda
          response:
            headers:
              Content-Type: "'application/json'"
              Cache-Control: "'max-age=0'"
  CreateProduct:
    handler: handler.onCreateProduct
    events:
      - http:
          path: create/product
          method: post
          cors: true
          integration: lambda
          response:
            headers:
              Content-Type: "'application/json'"
              Cache-Control: "'max-age=0'"
  
  